(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{545:function(t,s,e){"use strict";e.r(s);var a=e(2),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("Git 并不适合管理二进制文件，但有些情况下又不得不添加一些图片之类的二进制文件，但一旦频繁更改的话，历史记录中将记录着每一个完整的二进制文件，导致 repo 越来越大……为了解决该问题，往往需要一些针对二进制文件的处理手段")])]),t._v(" "),e("h2",{attrs:{id:"git-lfs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-lfs"}},[t._v("#")]),t._v(" Git LFS")]),t._v(" "),e("p",[t._v("Git LFS 是 github 推出的大文件存储服务，它是让 git 只保存二进制文件的 hash，而二进制文件将会存在 Git LFS 服务器中，当然，这可以有效防止 Git 历史的增长，但……免费只有 1G 空间，而且每月还限 1G 带宽，虽然看起来挺大的，但有一个月我频繁更新博客，CI 频繁地从 LFS 获取图片，结果居然真的差点就用到了 1 个 G 的带宽……之后我就开始另寻他法……")]),t._v(" "),e("h2",{attrs:{id:"定期清理-git-历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定期清理-git-历史"}},[t._v("#")]),t._v(" 定期清理 Git 历史")]),t._v(" "),e("p",[t._v("定期清理的话，虽然麻烦，但也最实用，在使用 LFS 之前我也定期清理过，是使用的 git-filter-branch，但由于嫌麻烦，就改用 LFS 了，至于为什么不用 BFG，因为懒得装 JDK")]),t._v(" "),e("p",[t._v("弃用 LFS 后，我仍然使用 git-filter-branch，不过实在是麻烦，每次清理我需要运行好多命令，比如清理全部 "),e("code",[t._v("*.jpg")]),t._v(" 图片，我需要")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" filter-branch --force --index-filter "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git rm --cached --ignore-unmatch -r *.jpg'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--prune-empty --tag-name-filter "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" -- --all\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf .git/refs/original/\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog expire --expire"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("now --all\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" gc --prune"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("now\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" gc --aggressive --prune"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("now\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master --force\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[t._v("emmm，就很麻烦")]),t._v(" "),e("p",[t._v("最近，使用 "),e("code",[t._v("git filter-branch")]),t._v(" 会提示 "),e("code",[t._v("warning")]),t._v("，推荐使用 "),e("code",[t._v("git filter-repo")]),t._v("，于是就试着搜了下，这居然是 python 实现的清理器，拥有远比 "),e("code",[t._v("git filter-branch")]),t._v(" 更加方便的使用方法，所以我在尝试了一下下就果断转 "),e("code",[t._v("git filter-repo")]),t._v(" 了")]),t._v(" "),e("p",[t._v("在使用之前需要先使用 pip 安装一下")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("pip3 "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" git-filter-repo\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("使用 "),e("code",[t._v("git filter-repo")]),t._v(" 清理全部 "),e("code",[t._v("*.jpg")]),t._v(" 只需要")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" filter-repo --path-glob "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.jpg'")]),t._v(" --invert-paths\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("不仅命令简单，而且速度超快，只不过不能像 "),e("code",[t._v("git filter-branch")]),t._v(" 一样清楚地了解都清理了哪些文件了")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("如果你不知道哪些历史文件比较大的话，可以运行下面这个命令来查找一下")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rev-list --objects --all "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" verify-pack -v .git/objects/pack/*.idx "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" -k "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" -n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tail")]),t._v(" -5 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("}'")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("p",[t._v("当然，这只是 "),e("code",[t._v("git filter-repo")]),t._v(" 的一个最简单的应用啦，更多使用技巧还是要看文档的～")]),t._v(" "),e("h2",{attrs:{id:"references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" References")]),t._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://github.com/newren/git-filter-repo",target:"_blank",rel:"noopener noreferrer"}},[t._v("git-filter-repo GitHub"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://htmlpreview.github.io/?https://github.com/newren/git-filter-repo/blob/docs/html/git-filter-repo.html#EXAMPLES",target:"_blank",rel:"noopener noreferrer"}},[t._v("git-filter-repo Manual Page"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://harttle.land/2016/03/22/purge-large-files-in-gitrepo.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("寻找并删除 Git 记录中的大文件"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=r.exports}}]);