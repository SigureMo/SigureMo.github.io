(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{258:function(a,s,t){a.exports=t.p+"assets/img/git-collaboration01.927d0bca.png"},307:function(a,s,t){"use strict";t.r(s);var e=t(2),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),e("p",[a._v("虽然平时写个笔记都会使用 Git 来保存，但常用的也就只有 "),e("code",[a._v("add")]),a._v("、"),e("code",[a._v("commit")]),a._v("、"),e("code",[a._v("push")]),a._v(" 等等简单的命令啦，偶尔出点问题都需要去现查，为了提高效率，我在这里整理一下简单的 Git 协作命令，以备不时之需ヽ(✿ ﾟ ▽ ﾟ)ノ")])]),a._v(" "),e("ul",[e("li",[a._v("预备知识\n"),e("ul",[e("li",[a._v("Git 基本命令")])])]),a._v(" "),e("li",[a._v("开发环境\n"),e("ul",[e("li",[e("code",[a._v("Git")])])])])]),a._v(" "),e("h2",{attrs:{id:"单人的工作模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单人的工作模式"}},[a._v("#")]),a._v(" 单人的工作模式")]),a._v(" "),e("p",[a._v("首先从最基本的简单单人工作模式，渐进地增加一些指令")]),a._v(" "),e("h3",{attrs:{id:"暂存文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#暂存文件"}},[a._v("#")]),a._v(" 暂存文件")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" *\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h3",{attrs:{id:"提交文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提交文件"}},[a._v("#")]),a._v(" 提交文件")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h3",{attrs:{id:"推送到远程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推送到远程"}},[a._v("#")]),a._v(" 推送到远程")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h3",{attrs:{id:"使用-dev-分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-dev-分支"}},[a._v("#")]),a._v(" 使用 dev 分支")]),a._v(" "),e("p",[a._v("如果有一个需要做很久的功能，应当新建一个分支，以保证 "),e("code",[a._v("main")]),a._v(" 的稳定性")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" dev\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h3",{attrs:{id:"合并其余分支内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并其余分支内容"}},[a._v("#")]),a._v(" 合并其余分支内容")]),a._v(" "),e("p",[a._v("当在 "),e("code",[a._v("dev")]),a._v(" 分支上的工作完成后，回到 "),e("code",[a._v("main")]),a._v(" 并合并")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout main\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge --no-ff dev            "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将 dev 合并回 main")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" dev                "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 移除无用的 dev 分支")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("参数 --no-ff 的作用")]),a._v(" "),e("p",[a._v("如果你想保留下来临时分支的信息，可以增加 "),e("code",[a._v("--no-ff")]),a._v(" 参数，这将把临时分支的信息作为一次 commit 合并到目标分支，但同时也会保留临时分支的过程，下面的图一目了然")]),a._v(" "),e("p",[e("img",{staticClass:"lazy",attrs:{alt:"","data-src":t(258),loading:"lazy"}})])]),a._v(" "),e("h2",{attrs:{id:"如何提交-pr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何提交-pr"}},[a._v("#")]),a._v(" 如何提交 PR")]),a._v(" "),e("p",[a._v("提交 PR 的最佳实践是现将原仓库 fork 到自己的账户下，然后"),e("strong",[a._v("新建一个分支")]),a._v("进行修改")]),a._v(" "),e("h3",{attrs:{id:"首先-clone-下来你-fork-的-repo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#首先-clone-下来你-fork-的-repo"}},[a._v("#")]),a._v(" 首先 clone 下来你 fork 的 repo")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone git@github.com:SigureMo/vuepress.git\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("当然，该 "),e("code",[a._v("repo")]),a._v(" 已经绑定在远程仓库 "),e("code",[a._v("origin")]),a._v(" 上了")]),a._v(" "),e("h3",{attrs:{id:"将原仓库绑定在-upstream"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将原仓库绑定在-upstream"}},[a._v("#")]),a._v(" 将原仓库绑定在 upstream")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" upstream git@github.com:vuejs/vuepress.git\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("这样，你的 "),e("code",[a._v("upstream")]),a._v(" 就代表了原作者的远程分支，而 "),e("code",[a._v("origin")]),a._v(" 就代表了你 fork 后的远程分支")]),a._v(" "),e("h3",{attrs:{id:"新建一个自己的分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#新建一个自己的分支"}},[a._v("#")]),a._v(" 新建一个自己的分支")]),a._v(" "),e("p",[a._v("比如你想修改 "),e("code",[a._v("main")]),a._v(" 分支，那么直接以此为基础新建分支就好")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout main                "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果已经在 main 则跳过")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" feature-xxx      "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 新建一个分支，名称随意")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("现在再 "),e("code",[a._v("git branch")]),a._v(" 一下就可以发现新建了一个 "),e("code",[a._v("feature-xxx")]),a._v(" 分支，并且已经切换到该分支了")]),a._v(" "),e("h3",{attrs:{id:"改动提交并推送"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#改动提交并推送"}},[a._v("#")]),a._v(" 改动提交并推送")]),a._v(" "),e("p",[a._v("在你的 "),e("code",[a._v("feature-xxx")]),a._v(" 上进行修改，并 "),e("code",[a._v("commit")]),a._v(" 以及推送，推送的时候最好指定分支")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin feature-xxx   "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将 feature-xxx 推送到 origin（也就是你 fork 后的 repo）")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h3",{attrs:{id:"在-github-发起-pr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-github-发起-pr"}},[a._v("#")]),a._v(" 在 GitHub 发起 PR")]),a._v(" "),e("p",[a._v("如果你的修改想要合并回原作者分支，那么就发起 PR 吧，如果原作者 merge 了，你的 "),e("code",[a._v("feature-xxx")]),a._v(" 也可以删除了，后续从原作者那里重新获取 "),e("code",[a._v("main")]),a._v(" 就能拥有你的改动了")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" feature-xxx              "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果该分支已经没有作用了，可以直接删除")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--delete")]),a._v(" feature-xxx   "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 同时删除远程分支")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h3",{attrs:{id:"解决冲突"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决冲突"}},[a._v("#")]),a._v(" 解决冲突")]),a._v(" "),e("p",[a._v("如果你的 PR 与原作者的默认分支修改发生了冲突，那么最佳实践是我们基于原作者最新修改 rebase 一下。")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch upstream\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rebase upstream/main\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("此时应当会提示有冲突，我们手动将所有冲突解决后，add 它们，比如这里发生冲突的是 "),e("code",[a._v("conflicted.md")])]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" conflicted.md\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("然后我们让 rebase 继续下去")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rebase "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--continue")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("现在，我们的修改就会变成基于原作者最新进度的修改了。我们 push 一下，当然，由于我们本次改动对历史有影响，因此需要 force 一下")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push --force-with-lease\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h3",{attrs:{id:"同步原作者更改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同步原作者更改"}},[a._v("#")]),a._v(" 同步原作者更改")]),a._v(" "),e("p",[a._v("如果原作者更新了原来的分支，总不能每次都重新 fork 一下仓库吧，如果之前没有在原有分支上进行修改的话，现在就可以在避免手动合并的情况下同步原作者后续修改了")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout main                "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 切换到 main")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch upstream               "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将原作者分支下载到本地")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge upstream/main          "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将原作者 main 分支最新内容合并到本地 main")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("h2",{attrs:{id:"如何合并-pr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何合并-pr"}},[a._v("#")]),a._v(" 如何合并 PR")]),a._v(" "),e("p",[a._v("既然你能发起一个 PR ，那么你也有可能收到一个 PR ，如果发起 PR 的人能够按照上面的规范来做，并且能规范书写代码、规范提交 commit 的话，你可以很容易地在 GitHub 上判断是 close 还是直接 merge ，但如果对方的代码稍有欠缺，就需要手动对代码进行 merge")]),a._v(" "),e("h3",{attrs:{id:"拉取目标用户分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拉取目标用户分支"}},[a._v("#")]),a._v(" 拉取目标用户分支")]),a._v(" "),e("p",[a._v("比如有这样的一个 PR "),e("a",{attrs:{href:"https://github.com/SigureMo/bilili/pull/89",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/SigureMo/bilili/pull/89"),e("OutboundLink")],1),a._v(" ，它是由用户 @vx13 创建的，为了能够在 GitHub 直接进行后续 Review 等操作，我们需要直接对该用户的该分支进行修改")]),a._v(" "),e("p",[a._v("为了实现这一点，我们可以这样做")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" vx13 https://github.com/vx13/bilili.git\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch vx13\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" feature-with-section vx13/feature-with-section\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[a._v("这样就将该用户的 PR 分支保存到 "),e("code",[a._v("feature-with-section")]),a._v(" 分支了，之后进行各种修改后 push 即可")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push vx16 HEAD:feature-with-section\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("值得注意的是，这需要该用户在提交 PR 时勾选 "),e("code",[a._v("Allow edits from maintainers")]),a._v("，该选项默认是勾选的，当然也不排除该用户取消勾选的可能")]),a._v(" "),e("h3",{attrs:{id:"在-github-交互式合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-github-交互式合并"}},[a._v("#")]),a._v(" 在 GitHub 交互式合并")]),a._v(" "),e("p",[a._v("GitHub 可以轻松对代码进行 Review，在整个 PR 完成之后，我们可以直接点击绿色的合并按钮右侧的下拉菜单，选择 "),e("code",[a._v("Squash and merge")]),a._v(" 来对整个 PR 进行合并，这样就可以将多个 commit 合并成一条 "),e("code",[a._v("main")]),a._v(" 分支的 commit 了，保证了主线清爽的线性结构，也保证了主线的一个 commit 对应一个完整的功能（一次 PR）")]),a._v(" "),e("h2",{attrs:{id:"团队协作模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#团队协作模式"}},[a._v("#")]),a._v(" 团队协作模式")]),a._v(" "),e("p",[a._v("团队协作应当不止建立 "),e("code",[a._v("main")]),a._v(" 与 "),e("code",[a._v("dev")]),a._v("，抛开额外的功能分支，每个人都应当从 "),e("code",[a._v("dev")]),a._v(" 建立自己的分支")]),a._v(" "),e("p",[e("code",[a._v("main")]),a._v(" 应当是一个相当稳定的分支，只有在 "),e("code",[a._v("dev")]),a._v(" 新功能基本稳定后，才合并回 "),e("code",[a._v("main")]),a._v(" 发版，团队各成员平时只允许向 "),e("code",[a._v("dev")]),a._v(" merge")]),a._v(" "),e("h3",{attrs:{id:"建立你自己的分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#建立你自己的分支"}},[a._v("#")]),a._v(" 建立你自己的分支")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout dev\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" feature-xxx     "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 新建一个你自己的分支")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h3",{attrs:{id:"完成你的工作-并发起-pr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#完成你的工作-并发起-pr"}},[a._v("#")]),a._v(" 完成你的工作，并发起 PR")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin feature-xxx\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("之后在 GitHub 上向 "),e("code",[a._v("dev")]),a._v(" 发起 PR 即可")]),a._v(" "),e("h3",{attrs:{id:"同步更改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同步更改"}},[a._v("#")]),a._v(" 同步更改")]),a._v(" "),e("p",[a._v("由于你的 "),e("code",[a._v("main")]),a._v(" 与 "),e("code",[a._v("dev")]),a._v(" 都是相当干净（自己没做过改动）的，你可以和前面一样 "),e("code",[a._v("fetch")]),a._v(" 并 "),e("code",[a._v("merge")]),a._v(" 即可")]),a._v(" "),e("h2",{attrs:{id:"references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[a._v("#")]),a._v(" References")]),a._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://www.cnblogs.com/ldy-blogs/p/10529946.html#4416607",target:"_blank",rel:"noopener noreferrer"}},[a._v("Git 常用命令和 Git Flow 梳理"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://www.jianshu.com/p/684a8ae9dcf1",target:"_blank",rel:"noopener noreferrer"}},[a._v("git merge squash 和 rebase 区别"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://liuyib.github.io/2020/09/19/add-commits-to-others-pr",target:"_blank",rel:"noopener noreferrer"}},[a._v("优雅地修改他人贡献的 Pull Request"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=r.exports}}]);